name: release

on:
  push:
    tags: [ 'v[1-9]+.*' ]
  workflow_dispatch:
    inputs:
      which-pypi:
        description: 'Which Python package index?'
        required: true
        type: choice
        options:
          - pypi
          - testpypi
        default: testpypi

env:
  DISTRIBUTIONS_PATH: '.auxiliary/artifacts/hatch-build'

jobs:

  initialize:
    uses: ./.github/workflows/core--initializer.yaml

  test:
    needs: [initialize]
    uses: emcd/python-project-common/.github/workflows/xrepo--tester.yaml@gha-1
    with:
      matrix-exclusions: '${{ needs.initialize.outputs.matrix-exclusions }}'
      platforms: '${{ needs.initialize.outputs.platforms }}'
      python-descriptors: '${{ needs.initialize.outputs.python-descriptors }}'
      python-versions: '${{ needs.initialize.outputs.python-versions }}'

  report:
    needs: [initialize, test]
    uses: emcd/python-project-common/.github/workflows/xrepo--reporter.yaml@gha-1
    with:
      python-version: '${{ fromJSON(needs.initialize.outputs.python-versions)[0] }}'

  docsgen:
    needs: [initialize, report]
    permissions:
      contents: write
      id-token: write
      pages: write
    uses: emcd/python-project-common/.github/workflows/xrepo--documenter.yaml@gha-1
    with:
      include-reports: true
      python-version: '${{ fromJSON(needs.initialize.outputs.python-versions)[0] }}'

  package:
    needs: [initialize, docsgen]
    uses: emcd/python-project-common/.github/workflows/xrepo--packager.yaml@gha-1
    with:
      artifacts-path: '.auxiliary/artifacts/hatch-build' # TODO: Use environment.
      python-version: '${{ fromJSON(needs.initialize.outputs.python-versions)[0] }}'

  create-executables:
      needs: [initialize, package]
      strategy:
        matrix:
          include:
            - os: ubuntu-22.04
              platform-name: linux-x86_64
            - os: windows-latest
              platform-name: windows-x86_64
            - os: macos-13
              platform-name: macos-x86_64
            - os: macos-latest
              platform-name: macos-arm64
      runs-on: ${{ matrix.os }}
      env:
        _PYI_EXECUTABLE_NAME: emcd-agents-common-${{ github.ref_name }}-${{ matrix.platform-name }}
      steps:
        - name: Prepare Python
          uses: emcd/python-project-common/.github/actions/python-hatch@gha-1
          with:
            python-version: ${{ fromJSON(needs.initialize.outputs.python-versions)[0] }}

        # - name: Install UPX (Linux)  # Pre-installed on GHA Ubuntu runners
        #   if: ${{ runner.os == 'Linux' }}
        #   run: sudo apt-get install --yes upx

        - name: Install UPX (macOS)
          if: ${{ runner.os == 'macOS' }}
          run: brew install upx

        - name: Install UPX (Windows)
          if: ${{ runner.os == 'Windows' }}
          run: choco install upx

        - name: Create Executable
          run: |
            hatch --env develop run \
              pyinstaller \
                --clean --distpath=.auxiliary/artifacts/pyinstaller \
                pyinstaller.spec
          shell: bash

        - name: Validate Executable (Non-Windows)
          if: ${{ runner.os != 'Windows' }}
          run: |
            .auxiliary/artifacts/pyinstaller/${_PYI_EXECUTABLE_NAME} --help
          shell: bash

        - name: Save Executable
          uses: actions/upload-artifact@v4
          with:
            name: executables--${{ matrix.platform-name }}--${{ github.run_id }}
            path: .auxiliary/artifacts/pyinstaller/emcd-agents-common-*
